// Code generated by protoc-gen-go. DO NOT EDIT.
// source: router.proto

package router

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RouteRequest struct {
	Gps                  []*GPSPoint `protobuf:"bytes,1,rep,name=gps,proto3" json:"gps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RouteRequest) Reset()         { *m = RouteRequest{} }
func (m *RouteRequest) String() string { return proto.CompactTextString(m) }
func (*RouteRequest) ProtoMessage()    {}
func (*RouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{0}
}

func (m *RouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteRequest.Unmarshal(m, b)
}
func (m *RouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteRequest.Marshal(b, m, deterministic)
}
func (m *RouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteRequest.Merge(m, src)
}
func (m *RouteRequest) XXX_Size() int {
	return xxx_messageInfo_RouteRequest.Size(m)
}
func (m *RouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RouteRequest proto.InternalMessageInfo

func (m *RouteRequest) GetGps() []*GPSPoint {
	if m != nil {
		return m.Gps
	}
	return nil
}

type RouteResponse struct {
	Ways                 []int64  `protobuf:"varint,1,rep,packed,name=Ways,proto3" json:"Ways,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteResponse) Reset()         { *m = RouteResponse{} }
func (m *RouteResponse) String() string { return proto.CompactTextString(m) }
func (*RouteResponse) ProtoMessage()    {}
func (*RouteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{1}
}

func (m *RouteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteResponse.Unmarshal(m, b)
}
func (m *RouteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteResponse.Marshal(b, m, deterministic)
}
func (m *RouteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteResponse.Merge(m, src)
}
func (m *RouteResponse) XXX_Size() int {
	return xxx_messageInfo_RouteResponse.Size(m)
}
func (m *RouteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RouteResponse proto.InternalMessageInfo

func (m *RouteResponse) GetWays() []int64 {
	if m != nil {
		return m.Ways
	}
	return nil
}

type GPSPoint struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Latitude             float64  `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Lognitude            float64  `protobuf:"fixed64,3,opt,name=lognitude,proto3" json:"lognitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GPSPoint) Reset()         { *m = GPSPoint{} }
func (m *GPSPoint) String() string { return proto.CompactTextString(m) }
func (*GPSPoint) ProtoMessage()    {}
func (*GPSPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_367072455c71aedc, []int{2}
}

func (m *GPSPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GPSPoint.Unmarshal(m, b)
}
func (m *GPSPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GPSPoint.Marshal(b, m, deterministic)
}
func (m *GPSPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GPSPoint.Merge(m, src)
}
func (m *GPSPoint) XXX_Size() int {
	return xxx_messageInfo_GPSPoint.Size(m)
}
func (m *GPSPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_GPSPoint.DiscardUnknown(m)
}

var xxx_messageInfo_GPSPoint proto.InternalMessageInfo

func (m *GPSPoint) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GPSPoint) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *GPSPoint) GetLognitude() float64 {
	if m != nil {
		return m.Lognitude
	}
	return 0
}

func init() {
	proto.RegisterType((*RouteRequest)(nil), "RouteRequest")
	proto.RegisterType((*RouteResponse)(nil), "RouteResponse")
	proto.RegisterType((*GPSPoint)(nil), "GPSPoint")
}

func init() {
	proto.RegisterFile("router.proto", fileDescriptor_367072455c71aedc)
}

var fileDescriptor_367072455c71aedc = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0xbf, 0x4e, 0x86, 0x30,
	0x14, 0xc5, 0xad, 0x35, 0x5f, 0x3e, 0xae, 0xe0, 0xd0, 0x89, 0xa0, 0x03, 0xa9, 0x0b, 0x89, 0xa6,
	0x03, 0x26, 0xbe, 0x82, 0x2b, 0xa9, 0x83, 0x33, 0xc8, 0x0d, 0x21, 0xa1, 0x7f, 0x6c, 0x2f, 0x83,
	0x6f, 0x6f, 0x28, 0x2a, 0xba, 0xdd, 0xfb, 0x3b, 0xe7, 0x24, 0xe7, 0x40, 0x1e, 0xdc, 0x4a, 0x18,
	0x94, 0x0f, 0x8e, 0x9c, 0x7c, 0x80, 0x5c, 0x6f, 0xbf, 0xc6, 0x8f, 0x15, 0x23, 0x89, 0x5b, 0xe0,
	0x93, 0x8f, 0x25, 0xab, 0x79, 0x73, 0xdd, 0x66, 0xea, 0xa5, 0x7b, 0xed, 0xdc, 0x6c, 0x49, 0x6f,
	0x54, 0xde, 0x43, 0xf1, 0x6d, 0x8e, 0xde, 0xd9, 0x88, 0x42, 0xc0, 0xd5, 0x5b, 0xff, 0xb9, 0xdb,
	0xb9, 0x4e, 0xb7, 0x1c, 0xe0, 0xfc, 0x93, 0x12, 0x77, 0x90, 0xd1, 0x6c, 0x30, 0x52, 0x6f, 0x7c,
	0xc9, 0x6a, 0xd6, 0x70, 0x7d, 0x00, 0x51, 0xc1, 0x79, 0xe9, 0x69, 0xa6, 0x75, 0xc4, 0xf2, 0xb2,
	0x66, 0x0d, 0xd3, 0xbf, 0xff, 0x96, 0x5c, 0xdc, 0x64, 0x77, 0x91, 0x27, 0xf1, 0x00, 0xed, 0x33,
	0x9c, 0x52, 0x91, 0x20, 0x1e, 0x21, 0xd3, 0xf8, 0xee, 0x8c, 0x41, 0x3b, 0x8a, 0x42, 0xfd, 0xdd,
	0x52, 0xdd, 0xa8, 0x7f, 0x6d, 0xe5, 0xc5, 0x70, 0x4a, 0xa3, 0x9f, 0xbe, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xf5, 0xc7, 0xe4, 0xb2, 0x04, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RouterClient is the client API for Router service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouterClient interface {
	Recommend(ctx context.Context, in *RouteRequest, opts ...grpc.CallOption) (*RouteResponse, error)
}

type routerClient struct {
	cc grpc.ClientConnInterface
}

func NewRouterClient(cc grpc.ClientConnInterface) RouterClient {
	return &routerClient{cc}
}

func (c *routerClient) Recommend(ctx context.Context, in *RouteRequest, opts ...grpc.CallOption) (*RouteResponse, error) {
	out := new(RouteResponse)
	err := c.cc.Invoke(ctx, "/Router/Recommend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouterServer is the server API for Router service.
type RouterServer interface {
	Recommend(context.Context, *RouteRequest) (*RouteResponse, error)
}

// UnimplementedRouterServer can be embedded to have forward compatible implementations.
type UnimplementedRouterServer struct {
}

func (*UnimplementedRouterServer) Recommend(ctx context.Context, req *RouteRequest) (*RouteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Recommend not implemented")
}

func RegisterRouterServer(s *grpc.Server, srv RouterServer) {
	s.RegisterService(&_Router_serviceDesc, srv)
}

func _Router_Recommend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterServer).Recommend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Router/Recommend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterServer).Recommend(ctx, req.(*RouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Router_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Router",
	HandlerType: (*RouterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Recommend",
			Handler:    _Router_Recommend_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "router.proto",
}
